const mongoose = require('mongoose');
const Vaccination = require('./src/models/Vaccination');

mongoose.connect('mongodb://localhost:27017/animal_vaccination_db', {
  useNewUrlParser: true,
  useUnifiedTopology: true
}).then(() => {
  console.log('โ Connected to MongoDB\n');
  addVaccinations();
}).catch(err => {
  console.error('โ MongoDB connection error:', err);
  process.exit(1);
});

async function addVaccinations() {
  try {
    console.log('๐ ุฅุถุงูุฉ ุชุทุนููุงุช ุชุฌุฑูุจูุฉ...\n');

    const vaccinations = [
      {
        name: 'Rift Valley Fever',
        nameAr: 'ุญูู ุงููุงุฏู ุงููุชุตุฏุน',
        description: 'Vaccination against Rift Valley Fever',
        descriptionAr: 'ุชุทุนูู ุถุฏ ุญูู ุงููุงุฏู ุงููุชุตุฏุน - ูุฑุถ ููุฑูุณู ุฎุทูุฑ ูุตูุจ ุงูุญููุงูุงุช',
        animalTypes: ['camel', 'sheep', 'cow', 'goat'],
        price: 150,
        duration: 30,
        frequency: 'annually',
        ageRange: { min: 1, max: 20 },
        sideEffects: ['Mild fever', 'Temporary loss of appetite'],
        sideEffectsAr: ['ุญูู ุฎูููุฉ', 'ููุฏุงู ูุคูุช ููุดููุฉ'],
        instructions: 'Administer subcutaneously',
        instructionsAr: 'ููุนุทู ุชุญุช ุงูุฌูุฏ',
        isActive: true
      },
      {
        name: 'Anthrax Vaccine',
        nameAr: 'ุชุทุนูู ุงูุฌูุฑุฉ ุงูุฎุจูุซุฉ',
        description: 'Protection against anthrax - a serious bacterial disease',
        descriptionAr: 'ุญูุงูุฉ ูู ุงูุฌูุฑุฉ ุงูุฎุจูุซุฉ - ูุฑุถ ุจูุชูุฑู ุฎุทูุฑ',
        animalTypes: ['camel', 'sheep', 'goat', 'cow'],
        price: 200,
        duration: 45,
        frequency: 'annually',
        ageRange: { min: 6, max: 25 },
        sideEffects: ['Swelling at injection site', 'Mild fever'],
        sideEffectsAr: ['ุชูุฑู ูู ูููุน ุงูุญูู', 'ุญูู ุฎูููุฉ'],
        instructions: 'Intramuscular injection',
        instructionsAr: 'ุญูู ุนุถูู',
        isActive: true
      },
      {
        name: 'Foot and Mouth Disease',
        nameAr: 'ุงูุญูู ุงูููุงุนูุฉ',
        description: 'Vaccination against FMD - highly contagious viral disease',
        descriptionAr: 'ุชุทุนูู ุถุฏ ุงูุญูู ุงูููุงุนูุฉ - ูุฑุถ ููุฑูุณู ุดุฏูุฏ ุงูุนุฏูู',
        animalTypes: ['sheep', 'goat', 'cow'],
        price: 120,
        duration: 30,
        frequency: 'biannually',
        ageRange: { min: 3, max: 15 },
        sideEffects: ['Local reaction', 'Reduced milk production'],
        sideEffectsAr: ['ุชูุงุนู ููุถุนู', 'ุงูุฎูุงุถ ุฅูุชุงุฌ ุงูุญููุจ'],
        isActive: true
      },
      {
        name: 'Camel Pox Vaccine',
        nameAr: 'ุชุทุนูู ุฌุฏุฑู ุงูุฅุจู',
        description: 'Prevention of camel pox - a contagious viral disease',
        descriptionAr: 'ุงูููุงูุฉ ูู ุฌุฏุฑู ุงูุฅุจู - ูุฑุถ ููุฑูุณู ูุนุฏู',
        animalTypes: ['camel'],
        price: 180,
        duration: 40,
        frequency: 'annually',
        ageRange: { min: 1, max: 30 },
        sideEffects: ['Temporary lesions', 'Mild fever'],
        sideEffectsAr: ['ุขูุงุช ูุคูุชุฉ', 'ุญูู ุฎูููุฉ'],
        isActive: true
      },
      {
        name: 'Peste des Petits Ruminants (PPR)',
        nameAr: 'ุทุงุนูู ุงููุฌุชุฑุงุช ุงูุตุบูุฑุฉ',
        description: 'Vaccine against PPR - deadly disease in small ruminants',
        descriptionAr: 'ุชุทุนูู ุถุฏ ุทุงุนูู ุงููุฌุชุฑุงุช ุงูุตุบูุฑุฉ - ูุฑุถ ูููุช ููุฃุบูุงู ูุงููุงุนุฒ',
        animalTypes: ['sheep', 'goat'],
        price: 90,
        duration: 25,
        frequency: 'annually',
        ageRange: { min: 4, max: 12 },
        sideEffects: ['Mild fever'],
        sideEffectsAr: ['ุญูู ุฎูููุฉ'],
        isActive: true
      },
      {
        name: 'Enterotoxemia (Clostridial)',
        nameAr: 'ุงูุชุณูู ุงููุนูู',
        description: 'Protection against clostridial diseases',
        descriptionAr: 'ุญูุงูุฉ ูู ุงูุฃูุฑุงุถ ุงููููุณุชุฑูุฏูุฉ',
        animalTypes: ['sheep', 'goat', 'cow'],
        price: 85,
        duration: 20,
        frequency: 'annually',
        ageRange: { min: 2, max: 18 },
        isActive: true
      }
    ];

    // ุญุฐู ุงูุชุทุนููุงุช ุงููุฏููุฉ
    await Vaccination.deleteMany({});
    console.log('๐๏ธ  ุชู ุญุฐู ุงูุชุทุนููุงุช ุงููุฏููุฉ');

    // ุฅุถุงูุฉ ุงูุชุทุนููุงุช ุงูุฌุฏูุฏุฉ
    const result = await Vaccination.insertMany(vaccinations);
    
    console.log(`โ ุชู ุฅุถุงูุฉ ${result.length} ุชุทุนูู ุจูุฌุงุญ\n`);
    
    // ุนุฑุถ ุงูุชุทุนููุงุช ุงููุถุงูุฉ
    console.log('๐ ุงูุชุทุนููุงุช ุงููุถุงูุฉ:');
    console.log('='.repeat(60));
    result.forEach((v, i) => {
      console.log(`\n${i + 1}. ${v.nameAr} (${v.name})`);
      console.log(`   - ุงูุณุนุฑ: ${v.price} ุฑูุงู`);
      console.log(`   - ุฃููุงุน ุงูุญููุงูุงุช: ${v.animalTypes.join(', ')}`);
      console.log(`   - ุงูุนูุฑ: ${v.ageRange.min}-${v.ageRange.max} ุณูุฉ`);
    });

    console.log('\nโ ุชู ุงูุงูุชูุงุก ูู ุฅุถุงูุฉ ุงูุชุทุนููุงุช!');
    console.log('๐ ููููู ุงูุขู ุชุดุบูู: node test-vaccinations-endpoint.js\n');

  } catch (error) {
    console.error('โ ุฎุทุฃ:', error);
  } finally {
    await mongoose.connection.close();
    console.log('๐ ุชู ุฅุบูุงู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
  }
}
